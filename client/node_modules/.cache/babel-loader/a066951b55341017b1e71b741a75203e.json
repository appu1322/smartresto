{"ast":null,"code":"import { axios } from \"./network\";\n\nconst getDishes = () => new Promise((resolve, reject) => {\n  axios({\n    method: 'GET',\n    url: `/all-Active-Dishes`\n  }).then(_ref => {\n    let {\n      data\n    } = _ref;\n    resolve(data);\n  }).catch(error => {\n    reject(error.response ? error.response.data : {});\n  });\n});\n\nconst getAllDishes = () => new Promise((resolve, reject) => {\n  axios({\n    method: 'GET',\n    url: `/allDishes`\n  }).then(_ref2 => {\n    let {\n      data\n    } = _ref2;\n    resolve(data);\n  }).catch(error => {\n    reject(error.response ? error.response.data : {});\n  });\n});\n\nconst getDish = id => new Promise((resolve, reject) => {\n  axios({\n    method: 'GET',\n    url: `/dish/${id}`\n  }).then(_ref3 => {\n    let {\n      data\n    } = _ref3;\n    resolve(data);\n  }).catch(error => {\n    reject(error.response ? error.response.data : {});\n  });\n});\n\nconst addDish = data => new Promise((resolve, reject) => {\n  axios({\n    method: 'POST',\n    url: `/addDish`,\n    data\n  }).then(_ref4 => {\n    let {\n      data\n    } = _ref4;\n    resolve(data);\n  }).catch(error => {\n    reject(error.response ? error.response.data : {});\n  });\n});\n\nconst updateDish = (id, data) => new Promise((resolve, reject) => {\n  axios({\n    method: 'PUT',\n    url: `/dish/${id}`,\n    data\n  }).then(_ref5 => {\n    let {\n      data\n    } = _ref5;\n    resolve(data);\n  }).catch(error => {\n    reject(error.response ? error.response.data : {});\n  });\n});\n\nconst updateDishStatus = (id, data) => new Promise((resolve, reject) => {\n  axios({\n    method: 'PUT',\n    url: `/dish-status/${id}`,\n    data\n  }).then(_ref6 => {\n    let {\n      data\n    } = _ref6;\n    resolve(data);\n  }).catch(error => {\n    reject(error.response ? error.response.data : {});\n  });\n});\n\nconst deleteDish = (id, data) => new Promise((resolve, reject) => {\n  axios({\n    method: 'DELETE',\n    url: `/dish/${id}`,\n    data\n  }).then(_ref7 => {\n    let {\n      data\n    } = _ref7;\n    resolve(data);\n  }).catch(error => {\n    reject(error.response ? error.response.data : {});\n  });\n});\n\nexport { getDishes, getDish, getAllDishes, addDish, updateDish, updateDishStatus, deleteDish };","map":{"version":3,"sources":["/home/india/Documents/my-react/smart resturent/client/src/services/dish.js"],"names":["axios","getDishes","Promise","resolve","reject","method","url","then","data","catch","error","response","getAllDishes","getDish","id","addDish","updateDish","updateDishStatus","deleteDish"],"mappings":"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","sourcesContent":["import { axios } from \"./network\";\n\nconst getDishes = ( ) =>\nnew Promise((resolve, reject) => {\n  axios({\n    method: 'GET',\n    url: `/all-Active-Dishes`\n  })\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch(error => {\n      reject(error.response ? error.response.data : {});\n    });\n});\n\nconst getAllDishes = ( ) =>\nnew Promise((resolve, reject) => {\n  axios({\n    method: 'GET',\n    url: `/allDishes`\n  })\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch(error => {\n      reject(error.response ? error.response.data : {});\n    });\n});\n\nconst getDish = ( id ) =>\nnew Promise((resolve, reject) => {\n  axios({\n    method: 'GET',\n    url: `/dish/${id}`\n  })\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch(error => {\n      reject(error.response ? error.response.data : {});\n    });\n});\n\nconst addDish = ( data ) =>\nnew Promise((resolve, reject) => {\n  axios({\n    method: 'POST',\n    url: `/addDish`,\n    data\n  })\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch(error => {\n      reject(error.response ? error.response.data : {});\n    });\n});\n\nconst updateDish = ( id, data ) =>\nnew Promise((resolve, reject) => {\n  axios({\n    method: 'PUT',\n    url: `/dish/${id}`,\n    data\n  })\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch(error => {\n      reject(error.response ? error.response.data : {});\n    });\n});\n\nconst updateDishStatus = ( id, data ) =>\nnew Promise((resolve, reject) => {\n  axios({\n    method: 'PUT',\n    url: `/dish-status/${id}`,\n    data\n  })\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch(error => {\n      reject(error.response ? error.response.data : {});\n    });\n});\n\nconst deleteDish = ( id, data ) =>\nnew Promise((resolve, reject) => {\n  axios({\n    method: 'DELETE',\n    url: `/dish/${id}`,\n    data\n  })\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch(error => {\n      reject(error.response ? error.response.data : {});\n    });\n});\n\nexport { getDishes, getDish, getAllDishes, addDish, updateDish, updateDishStatus, deleteDish };"]},"metadata":{},"sourceType":"module"}